{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "dw-sample"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy-from-s3",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "AzureDataLakeStoreSink",
								"copyBehavior": "MergeFiles"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "s3_data",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "staging",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "transform",
						"type": "DataLakeAnalyticsU-SQL",
						"dependsOn": [
							{
								"activity": "copy-from-s3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"scriptPath": "t.sql",
							"scriptLinkedService": {
								"referenceName": "staging",
								"type": "LinkedServiceReference"
							},
							"parameters": {
								"InputFile": {
									"value": "@CONCAT('/staging/', pipeline().RunId, '.paraquet')",
									"type": "Expression"
								},
								"OutputFile": {
									"value": "@CONCAT('/datawarehouse/', pipeline().RunId, '.csv')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDataLakeAnalytics1",
							"type": "LinkedServiceReference"
						}
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/s3_data')]",
				"[concat(variables('factoryId'), '/datasets/staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/s3_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AmazonS31",
					"type": "LinkedServiceReference"
				},
				"type": "AmazonS3Object",
				"structure": [
					{
						"name": "login",
						"type": "String"
					},
					{
						"name": "id",
						"type": "Int64"
					},
					{
						"name": "node_id",
						"type": "String"
					},
					{
						"name": "avatar_url",
						"type": "String"
					},
					{
						"name": "gravatar_id",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					},
					{
						"name": "html_url",
						"type": "String"
					},
					{
						"name": "followers_url",
						"type": "String"
					},
					{
						"name": "following_url",
						"type": "String"
					},
					{
						"name": "gists_url",
						"type": "String"
					},
					{
						"name": "starred_url",
						"type": "String"
					},
					{
						"name": "subscriptions_url",
						"type": "String"
					},
					{
						"name": "organizations_url",
						"type": "String"
					},
					{
						"name": "repos_url",
						"type": "String"
					},
					{
						"name": "events_url",
						"type": "String"
					},
					{
						"name": "received_events_url",
						"type": "String"
					},
					{
						"name": "type",
						"type": "String"
					},
					{
						"name": "site_admin",
						"type": "Boolean"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "company",
						"type": "String"
					},
					{
						"name": "blog",
						"type": "String"
					},
					{
						"name": "location",
						"type": "String"
					},
					{
						"name": "email",
						"type": "String"
					},
					{
						"name": "hireable",
						"type": "String"
					},
					{
						"name": "bio",
						"type": "String"
					},
					{
						"name": "public_repos",
						"type": "Int64"
					},
					{
						"name": "public_gists",
						"type": "Int64"
					},
					{
						"name": "followers",
						"type": "Int64"
					},
					{
						"name": "following",
						"type": "Int64"
					},
					{
						"name": "created_at",
						"type": "String"
					},
					{
						"name": "updated_at",
						"type": "String"
					},
					{
						"name": "extract_year",
						"type": "Int64"
					},
					{
						"name": "extract_month",
						"type": "Int64"
					},
					{
						"name": "extract_day",
						"type": "Int64"
					},
					{
						"name": "extract_hour",
						"type": "Int64"
					},
					{
						"name": "extract_minute",
						"type": "Int64"
					},
					{
						"name": "extract_second",
						"type": "Int64"
					},
					{
						"name": "extract_timestamp",
						"type": "Int64"
					}
				],
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "setOfObjects"
					},
					"key": "",
					"prefix": "",
					"bucketName": "public-api-extractor-prod-resultbucket-i6bd2vdbkloh"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "staging",
					"type": "LinkedServiceReference"
				},
				"type": "AzureDataLakeStoreFile",
				"typeProperties": {
					"format": {
						"type": "ParquetFormat"
					},
					"fileName": {
						"value": "@CONCAT(pipeline().RunId, '.paraquet')",
						"type": "Expression"
					},
					"folderPath": {
						"value": "staging",
						"type": "Expression"
					}
				}
			}
		}
	]
}